@font-face {
    font-family: 'Roboto';
    src: url('../fonts/roboto/Roboto-Regular.ttf') format('truetype');
}

body {
    font-family: 'Roboto', sans-serif;
    /* transition: all 0.5s ease; */
}

* {
    border: 0;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:root {
    --hue: 223;
    --primary: hsl(var(--hue), 90%, 50%);
    --trans-dur: 0.6s;
    --trans-timing: cubic-bezier(0.65, 0, 0.35, 1);
    /* font-size: calc(60px + (120 - 60) * (100vw - 320px) / (2560 - 320)); */
}

:root,
[data-bs-theme=light] {
    --bs-secondary-bg-rgb: 233, 236, 239;
}

[data-bs-theme=dark] {
    --bs-secondary-bg-rgb: 52, 58, 64;
}

.tableScroll {
    margin-bottom: 10px;
    padding: 0;
    overflow: auto;
}

.tableScroll thead th {
    position: sticky;
    top: 0;
    z-index: 1;
}

.pointer {
    cursor: pointer !important
}

.no-copy {
    user-select: none;
}

/* Đặt thanh trượt mặt định */
::-webkit-scrollbar {
    width: 7px;
    height: 7px;
    background: none;
}

::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 25px;
    transition: all 0.5s ease;
}

::-webkit-scrollbar-thumb:hover {
    background: #555;
}


.key-column {
    max-width: 200px;
    overflow: hidden;
    text-overflow: ellipsis;
}

.key-column:hover {
    overflow: auto;
    white-space: normal;
    text-overflow: unset;
}

.switch,
.switch__input {
    display: block;
    -webkit-tap-highlight-color: transparent;
}

.switch {
    margin: auto;
    position: relative;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

.switch__icon {
    color: hsla(var(--hue), 10%, 80%);
    pointer-events: none;
    position: absolute;
    top: 0.5em;
    left: 0.5em;
    width: 1em;
    height: 1em;
    transition:
        color var(--trans-dur),
        transform var(--trans-dur) var(--trans-timing);
}

.switch__icon:nth-of-type(2) {
    right: 0.6em;
    left: auto;
}

.switch__inner,
.switch__inner-icons {
    border-radius: 0.75em;
    display: block;
    overflow: hidden;
    position: absolute;
    top: 0.3em;
    left: 0.5em;
    width: 2.8em;
    height: 1.4em;
}

.switch__inner:before,
.switch__inner-icons {
    transition: transform var(--trans-dur) var(--trans-timing);
    transform: translateX(-1.25em);
}

.switch__inner:before {
    background-color: var(--primary);
    border-radius: inherit;
    content: "";
    display: block;
    width: 100%;
    height: 100%;
}

.switch__inner-icons {
    pointer-events: none;
}

.switch__inner-icons .switch__icon {
    color: hsl(0, 0%, 100%);
    top: 0.2em;
    left: 0.25em;
    transform: translateX(1.25em);
}

.switch__inner-icons .switch__icon:nth-child(2) {
    right: 0.2em;
    left: auto;
}

.switch__input {
    background-color: hsl(0, 0%, 100%);
    border-radius: 1em;
    box-shadow:
        0 0 0 0.0625em hsla(var(--hue), 90%, 50%, 0),
        0 0.125em 0.5em hsla(var(--hue), 10%, 10%, 0.1);
    outline: transparent;
    width: 3.8em;
    height: 2em;
    -webkit-appearance: none;
    appearance: none;
    transition:
        background-color var(--trans-dur),
        box-shadow var(--trans-dur);
}

.switch__input:checked {
    background-color: hsl(var(--hue), 10%, 10%);
}

.switch__input:checked~.switch__icon {
    color: hsla(var(--hue), 10%, 40%);
}

.switch__input:checked~.switch__inner:before,
.switch__input:checked~.switch__inner-icons {
    transform: translateX(1.25em);
}

.switch__input:not(:checked)~.switch__icon:first-of-type,
.switch__input:checked~.switch__icon:nth-of-type(2) {
    transform: rotate(360deg);
}

.switch__input:checked~.switch__inner-icons .switch__icon:first-of-type {
    transform: translateX(-1.25em) rotate(-360deg);
}

.switch__input:checked~.switch__inner-icons .switch__icon:nth-of-type(2) {
    transform: translateX(-1.25em) rotate(360deg);
}

.switch__input:focus-visible {
    box-shadow:
        0 0 0 0.0625em hsla(var(--hue), 90%, 50%, 1),
        0 0.125em 0.5em hsla(var(--hue), 10%, 10%, 0.1);
}

.switch__sr {
    overflow: hidden;
    position: absolute;
    width: 1px;
    height: 1px;
}

.form-check-list .form-check-input:checked+.form-check-label::after {
    content: "Danh sách đen";
}

.form-check-list .form-check-label::after {
    content: "Danh sách trắng";
}